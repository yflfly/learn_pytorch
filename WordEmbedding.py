# coding:utf-8
import torch

embedding = torch.nn.Embedding(10, 4)
# 1
print(embedding.weight)

# 2
input = torch.LongTensor([[1, 2, 4, 5], [4, 3, 2, 9]])
print(embedding(input))
'''
1 输出结果
tensor([[-0.9012,  2.1638,  0.6552,  0.6813],
        [ 0.3623,  1.0626,  0.8274,  1.6365],
        [ 0.8915, -0.0645,  0.0932, -1.7703],
        [-0.5080, -1.3582, -0.5453,  0.9737],
        [ 0.3496,  0.2259,  1.1287,  0.1131],
        [-1.0081, -1.7925, -0.0503, -0.0375],
        [-2.8157,  0.8788, -1.7226,  0.2399],
        [ 0.1833, -0.0066,  0.7704, -0.2748],
        [-1.0176,  0.5998,  1.4791,  0.3662],
        [-1.5951, -1.1774,  1.7562,  0.1199]], requires_grad=True)
2、输出结果
tensor([[[ 0.3623,  1.0626,  0.8274,  1.6365],
         [ 0.8915, -0.0645,  0.0932, -1.7703],
         [ 0.3496,  0.2259,  1.1287,  0.1131],
         [-1.0081, -1.7925, -0.0503, -0.0375]],

        [[ 0.3496,  0.2259,  1.1287,  0.1131],
         [-0.5080, -1.3582, -0.5453,  0.9737],
         [ 0.8915, -0.0645,  0.0932, -1.7703],
         [-1.5951, -1.1774,  1.7562,  0.1199]]], grad_fn=<EmbeddingBackward>)

'''
embedding_1 = torch.nn.Embedding(10, 4, padding_idx=0)
print(embedding_1.weight)
input_1 = torch.LongTensor([[0, 2, 0, 5]])
print(embedding_1(input_1))
'''
输出的结果如下所示：
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000],
        [ 1.6142, -0.2391, -0.6506,  0.5278],
        [-0.4994,  1.1487,  0.0183,  0.5282],
        [ 0.9732,  0.3960, -0.7172, -0.3228],
        [ 0.2909, -1.3810,  1.8478,  0.1262],
        [ 0.8598,  0.1054,  1.7597, -0.0695],
        [-0.4103,  0.9898,  1.0012,  1.8343],
        [-0.0229,  0.3177,  0.8519,  1.8222],
        [-0.6146, -1.1403,  1.0286,  0.6636],
        [-0.0616, -0.2993, -0.5811, -1.1662]], requires_grad=True)
tensor([[[ 0.0000,  0.0000,  0.0000,  0.0000],
         [-0.4994,  1.1487,  0.0183,  0.5282],
         [ 0.0000,  0.0000,  0.0000,  0.0000],
         [ 0.8598,  0.1054,  1.7597, -0.0695]]], grad_fn=<EmbeddingBackward>)
'''